name: Step 3

on:
  pull_request:
    branches:
      - main
    paths:
      - ".github/**"

permissions:
  contents: read
  actions: write
  issues: write

env:
  STEP_4_FILE: ".github/steps/4-play-time.md"

jobs:
  find_exercise:
    name: Find Exercise Issue
    uses: skills/exercise-toolkit/.github/workflows/find-exercise-issue.yml@v0.7.0

  check_step_work:
    name: Check step work
    runs-on: ubuntu-latest
    needs: [find_exercise]
    env:
      ISSUE_REPOSITORY: ${{ github.repository }}
      ISSUE_NUMBER: ${{ needs.find_exercise.outputs.issue-number }}

    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Get response templates
        uses: actions/checkout@v5
        with:
          repository: skills/exercise-toolkit
          path: exercise-toolkit
          ref: v0.7.0

      - name: Find last comment
        id: find-last-comment
        uses: peter-evans/find-comment@v3
        with:
          repository: ${{ env.ISSUE_REPOSITORY }}
          issue-number: ${{ env.ISSUE_NUMBER }}
          direction: last

      - name: Update comment - checking work
        uses: GrantBirki/comment@v2.1.1
        with:
          repository: ${{ env.ISSUE_REPOSITORY }}
          issue-number: ${{ env.ISSUE_NUMBER }}
          comment-id: ${{ steps.find-last-comment.outputs.comment-id }}
          file: exercise-toolkit/markdown-templates/step-feedback/checking-work.md
          edit-mode: replace
      # START: Check practical exercise

      - name: Check file changes
        id: changed-files
        uses: tj-actions/changed-files@v46.0.5

      - name: Check copilot-instructions.md
        id: check-instructions
        continue-on-error: true
        uses: actions/github-script@v8
        with:
          script: |
            const changedFiles = '${{ steps.changed-files.outputs.all_changed_files }}'.split(' ');
            let message = '';

            if (!changedFiles.includes('.github/copilot-instructions.md')) {
              message = 'You need to provide instructions in .github/copilot-instructions.md file';
              core.setOutput('STEP_MESSAGE', message);
              core.setFailed('The .github/copilot-instructions.md file was not modified');
              return;
            }

            message = 'Provided instructions in `.github/copilot-instructions.md`';
            core.setOutput('STEP_MESSAGE', message);

      - name: Check copilot-setup-steps.yml
        id: check-setup-steps
        continue-on-error: true
        uses: actions/github-script@v8
        with:
          script: |
            const changedFiles = '${{ steps.changed-files.outputs.all_changed_files }}'.split(' ');
            let message = '';

            if (!changedFiles.includes('.github/workflows/copilot-setup-steps.yml')) {
              message = 'You need to setup copilot-setup-steps.yml workflow';
              core.setOutput('STEP_MESSAGE', message);
              core.setFailed('The `copilot-setup-steps.yml` file was not modified');
              return;
            }

            message = 'You setup the copilot-setup-steps.yml workflow';
            core.setOutput('STEP_MESSAGE', message);

      - name: Update comment - step results
        uses: GrantBirki/comment@v2.1.1
        with:
          repository: ${{ env.ISSUE_REPOSITORY }}
          issue-number: ${{ env.ISSUE_NUMBER }}
          comment-id: ${{ steps.find-last-comment.outputs.comment-id }}
          edit-mode: replace
          file: exercise-toolkit/markdown-templates/step-feedback/step-results-table.md
          vars: |
            step_number: 3
            results_table:
              - description: ${{ steps.check-instructions.outputs.STEP_MESSAGE }}
                passed: ${{ steps.check-instructions.outcome == 'success' }}
              - description: ${{ steps.check-setup-steps.outputs.STEP_MESSAGE }}
                passed: ${{ steps.check-setup-steps.outcome == 'success' }}

      # END: Check practical exercise

      - name: Fail job if not all checks passed
        if: contains(steps.*.outcome, 'failure')
        run: exit 1

  post_next_step_content:
    name: Post next step content
    needs: [find_exercise, check_step_work]
    runs-on: ubuntu-latest
    env:
      ISSUE_REPOSITORY: ${{ github.repository }}
      ISSUE_NUMBER: ${{ needs.find_exercise.outputs.issue-number }}

    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Get response templates
        uses: actions/checkout@v5
        with:
          repository: skills/exercise-toolkit
          path: exercise-toolkit
          ref: v0.7.0

      - name: Create comment - step finished
        uses: GrantBirki/comment@v2.1.1
        with:
          repository: ${{ env.ISSUE_REPOSITORY }}
          issue-number: ${{ env.ISSUE_NUMBER }}
          file: exercise-toolkit/markdown-templates/step-feedback/step-finished-prepare-next-step.md
          vars: |
            next_step_number: 4

      - name: Create comment - add step content
        uses: GrantBirki/comment@v2.1.1
        with:
          repository: ${{ env.ISSUE_REPOSITORY }}
          issue-number: ${{ env.ISSUE_NUMBER }}
          file: ${{ env.STEP_4_FILE }}

      - name: Create comment - watching for progress
        uses: GrantBirki/comment@v2.1.1
        with:
          repository: ${{ env.ISSUE_REPOSITORY }}
          issue-number: ${{ env.ISSUE_NUMBER }}
          file: exercise-toolkit/markdown-templates/step-feedback/watching-for-progress.md

      - name: Disable current workflow and enable next one
        run: |
          gh workflow disable "${{github.workflow}}"
          gh workflow enable "Step 4"
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
